import net.jini.lookup.entry.*;
import net.jini.core.entry.*;
import org.jini.projects.thor.service.ui.*;
import org.jini.projects.thor.service.ThorServiceType;

import com.sun.jini.config.KeyStores;

import java.util.Collections;
import net.jini.jeri.ssl.*;
import net.jini.jeri.http.*;
import net.jini.core.constraint.*;
import net.jini.constraint.*;
import java.security.Permission;
import javax.security.auth.login.LoginContext;
import org.jini.projects.thor.service.ServerPermission;
import net.jini.jeri.*;


org.jini.projects.thor{

	name="thortest";
	logLevel="FINEST";
	groups=new String[]{"incaX"};
	codebase="http://localhost:8086/lib/thor-dl.jar";
	policy="config/policy.all";
	init = new Boolean(false);
	xmlfile="xml/sample_init.xml";
	
	
	 /* JAAS login */
    loginContext = null;
    //new LoginContext("org.jini.projects.thor");


	initialLookupAttributes = new Entry[] {new Name(name), new ThorServiceType()};
	
	/* Public Key Certificates */
    /*private static users = KeyStores.getKeyStore("file:/home/calum/truststore.trust", null);
    
    private static server = KeyStores.getX500Principal("thor", users);
	
	private static serverUser = Collections.singleton(KeyStores.getX500Principal("thor", users));
*/
	
	/* This is the secure service Exporter */
	
	exporter = new BasicJeriExporter(HttpServerEndpoint.getInstance(0), new BasicILFactory());
	
//	/* Use secure exporter */
//	new BasicJeriExporter(
//	    /* Use SSL transport */
//	    SslServerEndpoint.getInstance(0),
//	    /* Support ProxyTrust */
//	    new ProxyTrustILFactory(
//		/* Require integrity for all methods */
//		new BasicMethodConstraints(
//		    new InvocationConstraints(Integrity.YES, null)),
//		/* Require ServerPermission */
//		ServerPermission.class));
}